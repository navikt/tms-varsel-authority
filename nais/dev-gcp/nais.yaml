apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: tms-varsel-authority
  namespace: min-side
  labels:
    team: min-side
spec:
  image: {{version}}
  port: 8080
  liveness:
    path: /isalive
    initialDelay: 30
  readiness:
    path: /isready
    initialDelay: 30
  prometheus:
    enabled: true
    path: /metrics
  replicas:
    min: 2
    max: 4
    cpuThresholdPercentage: 50
  ingresses:
    - "https://tms-varsel-authority.intern.dev.nav.no"
  leaderElection: true
  resources:
    limits:
      cpu: "2"
      memory: 2400Mi
    requests:
      cpu: "100m"
      memory: 256Mi
  gcp:
    sqlInstances:
      - name: brukervarsler
        type: POSTGRES_14
        tier: db-f1-micro
        diskType: SSD
        highAvailability: false
        diskSize: 10
        diskAutoresize: true
        autoBackupTime: "03:00"
        databases:
          - name: brukervarsler
            envVarPrefix: DB
        maintenanceWindow:
          day: 1
          hour: 4
        cascadingDelete: false
  kafka:
    pool: nav-dev
  tokenx:
    enabled: true
  azure:
    application:
      enabled: true
    inbound:
      rules:
        - application: tms-varselbjelle-api
        - application: tms-min-side-proxy
        - application: tms-event-api
  env:
    - name: ARCHIVING_THRESHOLD
      value: "365"
    - name: INTERNAL_RAPID_TOPIC
      value: "min-side.brukervarsel-v1"
    - name: KAFKA_GROUP_ID
      value: "varsel-authority-001"
